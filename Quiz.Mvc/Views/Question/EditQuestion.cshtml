@model QuizMvc.Models.QuestionData
@using System.Collections

@{
    ViewData["Title"] = ViewBag.CreateMode ? "Create" : "Edit";
    Layout = "_Layout";
}

<script src="@Url.Content("~/Scripts/jquery.min.js")"></script>

<script language="javascript" type="text/javascript">
 
    function quizNameChange() {
        
        var quizID = window.$('#QuizName').val();
        
        window.$("#QuestionTypeName").empty();
        window.$("#QuizThemeName").empty();
        window.$("#AnswerTypeName").empty();
        
        window.$.ajax({
            url: '/Quiz/GetQuizSummary',
            type: "GET",
            dataType: "JSON",
            data: { QuizID: quizID, QuestionTypeID: 0 },
            success: function (response) {
                console.log(response);
                window.$.each(response, function (index, item) {
                    
                    if (window.$("#QuizThemeName option:contains('" + item.quizThemeName + "')").length === 0)
                    {
                        window.$("#QuizThemeName").append(window.$('<option/>', {
                            value: item.quizThemeID,
                            text: item.quizThemeName
                        }));
                    }
                    
                    if (window.$("#QuestionTypeName option:contains('" + item.questionTypeName + "')").length === 0)
                    {
                        window.$("#QuestionTypeName").append(window.$('<option/>', {
                            value: item.questionTypeID,
                            text: item.questionTypeName
                        }));
                    }
                    
                    if (window.$("#AnswerTypeName option:contains('" + item.answerTypeName + "')").length === 0)
                    {
                        window.$("#AnswerTypeName").append(window.$('<option/>', {
                            value: item.answerTypeID,
                            text: item.answerTypeName
                        }));
                    }
                    
                });
            }
        });
    }
    
    function questionTypeChange() {
       
        var quizID = window.$('#QuizName').val();
        var questionTypeID = window.$('#QuestionTypeName').val();
        
        window.$("#AnswerTypeName").empty();
        
        window.$.ajax({
            url: '/Quiz/GetQuizSummary',
            type: "GET",
            dataType: "JSON",
            data: { QuizID: quizID, QuestionTypeID: questionTypeID },
            success: function (response) {
                console.log(response);
                window.$.each(response, function (index, item) {
                    if (window.$("#AnswerTypeName option:contains('" + item.answerTypeName + "')").length === 0) {
                        window.$("#AnswerTypeName").append(window.$('<option/>',
                            {
                                value: item.answerTypeID,
                                text: item.answerTypeName
                            }));
                    }
                });
            }
        });
        
    }
    
</script>


@using (Html.BeginForm(ViewBag.CreateMode ? "Create" : "Edit", "Question"))
{
    <div class="form-group">
        <label>Quiz</label>
        @Html.DropDownListFor(x => Model.QuizID, new SelectList((IEnumerable)ViewData["Quizes"], "ID", "QuizName"), new { @class = "form-control", @id = "QuizName", onchange="quizNameChange()"})
        
        <br/>
        
        <label>Quiz Theme</label>
        @Html.DropDownListFor(x => Model.QuizThemeID, new SelectList((IEnumerable)ViewData["QuizThemes"], "ID", "QuizThemeName"), new { @class = "form-control", @id = "QuizThemeName"})               
        <br/>

        <label>Question Type</label>
        @Html.DropDownListFor(x => Model.QuestionTypeID, new SelectList((IEnumerable)ViewData["QuestionTypes"], "ID", "QuestionTypeName"), new { @class = "form-control", @id = "QuestionTypeName", onchange = "questionTypeChange()"})                
        <br/>
        
        <label>Answer Type</label>
        @Html.DropDownListFor(x => Model.AnswerTypeID, new SelectList((IEnumerable)ViewData["AnswerTypes"], "ID", "AnswerTypeName"), new { @class = "form-control", @id = "AnswerTypeName"})
        <br/>

        <label for="file">Upload Image:</label> 
        <input type="file" name="file" id="file" style="width: 100%;" /> 
        
        <br/><br/>
        
        <label>Correct Answer</label>
        <input asp-for="CorrectAnswer" class="form-control"/>
    </div>
    
    <div class="text-center">
        <button class="btn btn-primary" type="submit">Save</button>
        <a asp-action="Index" class="btn btn-secondary">Cancel</a>
    </div>
}